import { Cart } from "@commercetools/domain-types/cart/Cart";
import { Order } from "@commercetools/domain-types/cart/Order";
import { ShippingMethod } from "@commercetools/domain-types/cart/ShippingMethod";
import { AddCartItemPayload, RemoveCartItemPayload, UpdateCartItemPayload, UpdateCartPayload, SetCartShippingMethodPayload, RedeemDiscountCodePayload, RemoveDiscountCodePayload } from "../payloads/CartPayloads";
declare type GetCartAction = () => Promise<Cart>;
declare type AddCartItemAction = (payload: AddCartItemPayload) => Promise<Cart>;
declare type RemoveCartItemAction = (payload: RemoveCartItemPayload) => Promise<Cart>;
declare type UpdateCartItemAction = (payload: UpdateCartItemPayload) => Promise<Cart>;
declare type UpdateCartAction = (payload: UpdateCartPayload) => Promise<Cart>;
declare type GetCartShippingMethodsAction = () => Promise<ShippingMethod[]>;
declare type GetAvailableCartShippingMethodsAction = () => Promise<ShippingMethod[]>;
declare type SetCartShippingMethodAction = (payload: SetCartShippingMethodPayload) => Promise<Cart>;
declare type RedeemDiscountCodeAction = (payload: RedeemDiscountCodePayload) => Promise<Cart | string>;
declare type RemoveDiscountCodeAction = (payload: RemoveDiscountCodePayload) => Promise<Cart>;
declare type CheckoutCartAction = () => Promise<Cart>;
declare type GetOrderHistoryAction = () => Promise<Order[]>;
export { GetCartAction, AddCartItemAction, RemoveCartItemAction, UpdateCartItemAction, UpdateCartAction, GetCartShippingMethodsAction, GetAvailableCartShippingMethodsAction, SetCartShippingMethodAction, RedeemDiscountCodeAction, RemoveDiscountCodeAction, CheckoutCartAction, GetOrderHistoryAction };
